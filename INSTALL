To build the tamm code - cmake, a blas library are needed.

mkdir build && cd build

cmake .. -DTAMM_BLAS_INC=/opt/intel/mkl/include/ -DTAMM_BLAS_LIB=/opt/intel/mkl/lib/intel64 -DCMAKE_CXX_COMPILER=icpc -DCMAKE_Fortran_COMPILER=ifort -DCMAKE_C_COMPILER=icc -DANTLR_CPPRUNTIME:STRING=/opt/libraries/ANTLR4/antlr4-cpp-runtime

 - If the -DANTLR_CPPRUNTIME option is not specified, the antlr4-runtime is built in the build folder in the path ${TAMM_HOME}/build/dependencies/ANTLR/CppRuntime.
Once built, it can be copied to another folder of your choice outside TAMM_HOME and pass that path to -DANTLR_CPPRUNTIME the next time onwards. 
This way, the antlr4 runtime library does not have to be re-built each time the build folder is deleted.

Cascade: 
 - Setting the compiler linker etc below allows for make link to work correctly otherwise it uses gcc and system default ar:

  cmake ../ -DTAMM_BLAS_INC=/msc/apps/compilers/intel_parallel_studio/compilers_and_libraries_2016/linux/mkl/include/ -DCMAKE_C_COMPILER=icc \
  -DCMAKE_CXX_COMPILER=icpc -DCMAKE_Fortran_COMPILER=ifort -DCMAKE_AR=/msc/apps/compilers/intel_parallel_studio/compilers_and_libraries_2016/linux/bin/intel64/xiar

 - cmake ../ -DTAMM_BLAS_INC=/msc/apps/compilers/IPS_2017_U1/compilers_and_libraries_2017.1.132/linux/mkl/include -DTAMM_BLAS_LIB=/msc/apps/compilers/IPS_2017_U1/compilers_and_libraries_2017.1.132/linux/mkl/lib/intel64 \
   -DCMAKE_C_COMPILER=icc -DCMAKE_CXX_COMPILER=icpc -DCMAKE_Fortran_COMPILER=ifort -DANTLR_CPPRUNTIME:STRING=/home/panyala/software/ANTLR/antlr4-cpp-runtime -DCMAKE_AR=/msc/apps/compilers/IPS_2017_U1/bin/xiar


make unpatch //Reverts gnumakefile
make patch-only //Fixes gnumakefile 
make patch //Fixes gnumakefile and copies *.F from nwchem-mods/src into $NWCHEM_TOP/src
make link //Installs and links with nwchem 

make test //Runs ctest
make check //Runs ctest with all output


