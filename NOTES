Input format:

* Add label to equation block i.e { ... } => label1 { ... }

* Tensor labels: i[1-9][0-9]+ are intermediates. All else are inputs ([txvf][0-9]+), including i0

* Sum() and P() can be removed

* For inputs, irrep is in the suffix

* Contraction labeling: parts
  - File name (t1_, t2_, t3_, ..)
  - At the top-level (indent 0), all contractions are labeled 1_, 2_, ..
  - Within a level (e.g., t2_3), all contractions at the immediate enclosed level are labeled 1_, 2_,..
  - Intermediate tensor name: name of contraction that first defines it (always at the top (_1) of the list of contractions that define it)

* Replace use of intermediate with their unique name/labels

* Array creation: as late as possible
* Array destruction: as early as possible




Clarifications:

* Additions of tensors with different irreps


Assumptions:

- range of h1..hn: O and p1..pn: V

- indices in array reference are always h[1-9]+ or p[1-9]+

- statement label and function name prefixes come from file name.



Unfactorized equations Test
----------------------------

- ccsd_t2_hand.eq cannot be Unfactorized

- icsd unfactorizes okay, but does not work - something to do with tamm and NW fortran code

- ipccsd_x1 and x2 do not work - check if they unfactorize okay? original eqs work  
- eaccsd_x1 and x2 do not work - mostly due to uneven indices ? 

- and add exp i0[] = a1[] + a2[] does not work --> tamm iterator cannot handle AddOp involving scalars (assert ndim>0 in tensors_and_ops.cc)
  - for this reason, we do not include unfactorized ccsd_e,cisd_e,and small gamma eqns - pp,hh,hp - since they are 1-2 ops only, they do not matter anyway

  




ANTLR
-----

uuid not found on clusters ??

Need gcc > 5 . i use 6 for c++14 support
the intel compilers must also be built with gcc6 support 

Disable antlr cmakelist else condition that does not use intel compilers ? - not needed we can build antlr cpp runtime with gcc6 and intel for everything else
 cmake .. -DTAMM_BLAS_INC=/opt/intel/mkl/include/ -DTAMM_BLAS_LIB=/opt/intel/mkl/lib/intel64 -DCMAKE_CXX_COMPILER=icpc  -DCMAKE_C_COMPILER=icc


