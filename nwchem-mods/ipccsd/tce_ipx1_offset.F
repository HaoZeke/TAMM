ckbn Kiran Bhaskaran-Nair modified from tce_x1_offset.F
      SUBROUTINE tce_ipx1_offset(l_a_offset,k_a_offset,size)
C     $Id: tce_ipx1_offset.F 25748 2014-06-08 07:53:05Z d3y133 $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     x ( p2 h3 )_x
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER p2b
      INTEGER h3b
      length = 0
ckbn      DO p2b = noab+1,noab+nvab
      DO p2b = 1,1
      DO h3b = 1,noab
ckbn      IF (int_mb(k_spin+p2b-1) .eq. int_mb(k_spin+h3b-1)) THEN
      IF (ip_unused_spin  .eq. int_mb(k_spin+h3b-1)) THEN
ckbn      IF (ieor(int_mb(k_sym+p2b-1),int_mb(k_sym+h3b-1)) .eq. irrep_x) TH
ckbn     &EN
      IF (ieor(ip_unused_sym ,int_mb(k_sym+h3b-1)) .eq. irrep_x) TH
     &EN
ckbn      IF ((.not.restricted).or.(int_mb(k_spin+p2b-1)+int_mb(k_spin+h3b-1
ckbn     &).ne.4)) THEN
      IF ((.not.restricted).or.( ip_unused_spin +int_mb(k_spin+h3b-1
     &).ne.4)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'tce_x1_offset',l_a_offset,
     1k_a_offset)) CALL ERRQUIT('tce_x1_offset',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
ckbn      DO p2b = noab+1,noab+nvab
      DO p2b = 1,1
      DO h3b = 1,noab
         write(*,*) 'h3b=', h3b
ckbn      IF (int_mb(k_spin+p2b-1) .eq. int_mb(k_spin+h3b-1)) THEN
      IF (ip_unused_spin .eq. int_mb(k_spin+h3b-1)) THEN
ckbn      IF (ieor(int_mb(k_sym+p2b-1),int_mb(k_sym+h3b-1)) .eq. irrep_x) TH
ckbn     &EN
         write (*,*) 'spin nonzero'
         write (*,*) 'spatial(h3b)=', int_mb(k_sym+h3b-1)
         write (*,*) 'irrep_x=', irrep_x
      IF (ieor(ip_unused_sym ,int_mb(k_sym+h3b-1)) .eq. irrep_x) TH
     &EN
         write (*,*) 'spatial nonzero'
ckbn      IF ((.not.restricted).or.(int_mb(k_spin+p2b-1)+int_mb(k_spin+h3b-1
ckbn     &).ne.4)) THEN
      IF ((.not.restricted).or.(ip_unused_spin+int_mb(k_spin+h3b-1
     &).ne.4)) THEN
      addr = addr + 1
c      int_mb(k_a_offset+addr) = h3b - 1 + noab * (p2b - noab - 1)
      int_mb(k_a_offset+addr) = h3b - 1
      int_mb(k_a_offset+length+addr) = size
ckbn      size = size + int_mb(k_range+p2b-1) * int_mb(k_range+h3b-1)
      write(*,*) 'x1 addr=', h3b-1
      write(*,*) 'x1 offset=', size
      size = size + 1 * int_mb(k_range+h3b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      write(*,*) 'x1 noab=', noab
      write(*,*) 'x1 ip_unused_sym=', ip_unused_sym
      write(*,*) 'x1 ip_unused_spin=', ip_unused_spin
      write(*,*) 'x1 irrep_f=', irrep_f
      write(*,*) 'x1 irrep_t=', irrep_t
      write(*,*) 'x1 irrep_x=', irrep_x
      RETURN
      END
