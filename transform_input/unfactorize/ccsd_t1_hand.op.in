t1 {

index h1,h2,h3,h4,h5,h6,h7,h8 = O;
index p1,p2,p3,p4,p5,p6,p7 = V;

array i0[V][O];
array f[N][N]: irrep_f;
array v[N,N][N,N]: irrep_v;
array t_vo[V][O]: irrep_t;
array t_vvoo[V,V][O,O]: irrep_t;
array t1_2_1[O][O];
array t1_2_2_1[O][V];
array t1_3_1[V][V];
array t1_5_1[O][V];
array t1_6_1[O,O][O,V];

t1_1:       i0[p2,h1] += 1 * f[p2,h1];
t1_2_1:     t1_2_1[h7,h1] += 1 * f[h7,h1];
t1_2_2_1:   t1_2_2_1[h7,p3] += 1 * f[h7,p3];
t1_2_2_2:   t1_2_2_1[h7,p3] += -1 * t_vo[p5,h6] * v[h6,h7,p3,p5];
t1_2_2:     t1_2_1[h7,h1] += 1 * t_vo[p3,h1] * t1_2_2_1[h7,p3];
t1_2_3:     t1_2_1[h7,h1] += -1 * t_vo[p4,h5] * v[h5,h7,h1,p4];
t1_2_4:     t1_2_1[h7,h1] += -1/2 * t_vvoo[p3,p4,h1,h5] * v[h5,h7,p3,p4];
t1_2:       i0[p2,h1] += -1 * t_vo[p2,h7] * t1_2_1[h7,h1];
t1_3_1:     t1_3_1[p2,p3] += 1 * f[p2,p3];
t1_3_2:     t1_3_1[p2,p3] += -1 * t_vo[p4,h5] * v[h5,p2,p3,p4];
t1_3:       i0[p2,h1] += 1 * t_vo[p3,h1] * t1_3_1[p2,p3];
t1_4:       i0[p2,h1] += -1 * t_vo[p3,h4] * v[h4,p2,h1,p3];
t1_5_1:     t1_5_1[h8,p7] += 1 * f[h8,p7];
t1_5_2:     t1_5_1[h8,p7] += 1 * t_vo[p5,h6] * v[h6,h8,p5,p7];
t1_5:       i0[p2,h1] += 1 * t_vvoo[p2,p7,h1,h8] * t1_5_1[h8,p7];
t1_6_1:     t1_6_1[h4,h5,h1,p3] += 1 * v[h4,h5,h1,p3];
t1_6_2:     t1_6_1[h4,h5,h1,p3] += -1 * t_vo[p6,h1] * v[h4,h5,p3,p6];
t1_6:       i0[p2,h1] += -1/2 * t_vvoo[p2,p3,h4,h5] * t1_6_1[h4,h5,h1,p3];
t1_7:       i0[p2,h1] += -1/2 * t_vvoo[p3,p4,h1,h5] * v[h5,p2,p3,p4];

}

outputs = i0

 t1_2_1, t1_2_2_1 are not in outputs since they are in rhs(ops)

Step1:

t1_2_1[h7,h1] += 1 * f[h7,h1]; //done
t1_2_2_1[h7,p3] += 1 * f[h7,p3]; //done
t1_2_2_1[h7,p3] += -1 * t_vo[p5,h6] * v[h6,h7,p3,p5]; //done
t1_2_1[h7,h1] += 1 * t_vo[p3,h1] * ( 1 * f[h7,p3] -1 * t_vo[p5,h6] * v[h6,h7,p3,p5] );  //unfact(t1_2_2_1[h7,p3])
t1_2_1[h7,h1] += -1 * t_vo[p4,h5] * v[h5,h7,h1,p4];
t1_2_1[h7,h1] += -1/2 * t_vvoo[p3,p4,h1,h5] * v[h5,h7,p3,p4]; //Convert [] to () remove commas, convert -1/2 to -0.5
t1_3_1[p2,p3] += 1 * f[p2,p3];
t1_3_1[p2,p3] += -1 * t_vo[p4,h5] * v[h5,p2,p3,p4];//done
t1_5_1[h8,p7] += 1 * f[h8,p7];
t1_5_1[h8,p7] += 1 * t_vo[p5,h6] * v[h6,h8,p5,p7]; //done
t1_6_1:     t1_6_1[h4,h5,h1,p3] += 1 * v[h4,h5,h1,p3];
t1_6_2:     t1_6_1[h4,h5,h1,p3] += -1 * t_vo[p6,h1] * v[h4,h5,p3,p6]; //done

i0[p2,h1] += 1 * f[p2,h1];
i0[p2,h1] += -1 * t_vo[p2,h7] * (1 * f[h7,h1] + 1 * t_vo[p3,h1] * ( 1 * f[h7,p3] -1 * t_vo[p5,h6] * v[h6,h7,p3,p5] ) + -1 * t_vo[p4,h5] * v[h5,h7,h1,p4] + -1/2 * t_vvoo[p3,p4,h1,h5] * v[h5,h7,p3,p4]); //unfact(t1_2_1[h7,h1]
i0[p2,h1] += 1 * t_vo[p3,h1] * (1 * f[p2,p3] + -1 * t_vo[p4,h5] * v[h5,p2,p3,p4])  //unfact t1_3_1[p2,p3];
i0[p2,h1] += -1 * t_vo[p3,h4] * v[h4,p2,h1,p3];
i0[p2,h1] += 1 * t_vvoo[p2,p7,h1,h8] * (1 * f[h8,p7] + 1 * t_vo[p5,h6] * v[h6,h8,p5,p7]) //unfact t1_5_1[h8,p7];
i0[p2,h1] += -1/2 * t_vvoo[p2,p3,h4,h5] * (1 * v[h4,h5,h1,p3] + -1 * t_vo[p6,h1] * v[h4,h5,p3,p6]) //unfact t1_6_1[h4,h5,h1,p3];
i0[p2,h1] += -1/2 * t_vvoo[p3,p4,h1,h5] * v[h5,p2,p3,p4];


Step 2:

outputs have all i0 ops. Add them up

i0[p2,h1] += 1 * f[p2,h1]
-1 * t_vo[p2,h7] * (1 * f[h7,h1]
+ -1 * t_vo[p2,h7] * 1 * t_vo[p3,h1] * 1 * f[h7,p3]
+ -1 * t_vo[p2,h7] * 1 * t_vo[p3,h1] * -1 * t_vo[p5,h6] * v[h6,h7,p3,p5]
+ -1 * t_vo[p2,h7] * -1 * t_vo[p4,h5] * v[h5,h7,h1,p4]
+ -1 * t_vo[p2,h7] * -1/2 * t_vvoo[p3,p4,h1,h5] * v[h5,h7,p3,p4]); //unfact(t1_2_1[h7,h1]
+ 1 * t_vo[p3,h1] * (1 * f[p2,p3]
+ 1 * t_vo[p3,h1] * -1 * t_vo[p4,h5] * v[h5,p2,p3,p4])  //unfact t1_3_1[p2,p3];
-1 * t_vo[p3,h4] * v[h4,p2,h1,p3]
+ 1 * t_vvoo[p2,p7,h1,h8] * (1 * f[h8,p7]
+ 1 * t_vvoo[p2,p7,h1,h8] * + 1 * t_vo[p5,h6] * v[h6,h8,p5,p7]) //unfact t1_5_1[h8,p7];
-1/2 * t_vvoo[p2,p3,h4,h5] * (1 * v[h4,h5,h1,p3]
+ -1/2 * t_vvoo[p2,p3,h4,h5] * -1 * t_vo[p6,h1] * v[h4,h5,p3,p6]) //unfact t1_6_1[h4,h5,h1,p3];
-1/2 * t_vvoo[p3,p4,h1,h5] * v[h5,p2,p3,p4];

----------

[1.0] * f(p2 h1)
[-1.0] * t_vo(p2 h7) * f(h7 h1)
[-1.0] * t_vo(p2 h7) * t_vo(p3 h1) * f(h7 p3)
[+1.0] * t_vo(p2 h7) * t_vo(p3 h1) * t_vo(p5 h6) * v(h6 h7 p3 p5)
[+1.0] * t_vo(p2 h7) * t_vo(p4 h5) * v(h5 h7 h1 p4)
[+0.5] * t_vo(p2 h7)  * t_vvoo(p3 p4 h1 h5) * v(h5 h7 p3 p4))
[+1.0] * t_vo(p3 h1) * f(p2 p3)
[-1.0] * t_vo(p3 h1)  * t_vo(p4 h5) * v(h5 p2 p3 p4)
[-1.0] * t_vo(p3 h4) * v(h4 p2 h1 p3)
[+1.0] * t_vvoo(p2 p7 h1 h8) * f(h8 p7)
[+1.0] * t_vvoo(p2 p7 h1 h8) * t_vo(p5 h6) * v(h6 h8 p5 p7)
[-0.5] * t_vvoo(p2 p3 h4 h5) * v(h4 h5 h1 p3)
[+0.5] * t_vvoo(p2 p3 h4 h5) * t_vo(p6 h1) * v(h4 h5 p3 p6)
[-0.5] * t_vvoo(p3 p4 h1 h5) * v(h5 p2 p3 p4)



[+1.0] * f(p2 h1)
[-1.0] * t(p2 h7) * f(h7 h1)
[-1.0] * t(p2 h7) * t(p3 h1) * f(h7 p3)
[+1.0] * t(p2 h7) * t(p3 h1) * t(p5 h6) * v(h6 h7 p3 p5)
[+1.0] * t(p2 h7) * t(p4 h5) * v(h5 h7 h1 p4)
[+0.5] * t(p2 h7) * t(p3 p4 h1 h5) * v(h5 h7 p3 p4)
[+1.0] * t(p3 h1) * f(p2 p3)
[-1.0] * t(p3 h1) * t(p4 h5) * v(h5 p2 p3 p4)
[-1.0] * t(p3 h4) * v(h4 p2 h1 p3)
[+1.0] * t(p2 p7 h1 h8) * f(h8 p7)
[+1.0] * t(p2 p7 h1 h8) * t(p5 h6) * v(h6 h8 p5 p7)
[-0.5] * t(p2 p3 h4 h5) * v(h4 h5 h1 p3)
[+0.5] * t(p2 p3 h4 h5) * t(p6 h1) * v(h4 h5 p3 p6)
[-0.5] * t(p3 p4 h1 h5) * v(h5 p2 p3 p4)